CC=gcc.exe
CFLAGS=-c -Iinclude
BIN=bin\libCpScriptAsmTest.exe
BINOBJ=obj\test.o
LIB=lib\libCpScriptAsm.a
SHAREDLIB=lib\libCpScriptAsm.so
LIBOBJ=obj\AssemblyToken.o obj\Extensions.o obj\LabelDef.o obj\List.o obj\MemoryBlock.o obj\MemoryBlockHeader.o obj\MemoryBlockSetHeader.o obj\Parser.o obj\Stack.o obj\State.o

all: $(LIB) $(BIN)

clean: 
	rm -f $(LIB) $(BIN) $(LIBOBJ) $(SHAREDLIB) $(BINOBJ)

$(LIB): $(LIBOBJ)
	ar rcs $(LIB) $(LIBOBJ)
	$(CC) -fPIC -shared $(LIBOBJ) -o $(SHAREDLIB)

$(BIN): $(LIB) $(BINOBJ)
	$(CC) $(BINOBJ) -Llib -lCpScriptAsm -lKernel32 -o $(BIN)

obj\AssemblyToken.o: src\AssemblyToken.c
	$(CC) $(CFLAGS) src\AssemblyToken.c -o obj\AssemblyToken.o

obj\Extensions.o: src\Extensions.c
	$(CC) $(CFLAGS) src\Extensions.c -o obj\Extensions.o

obj\LabelDef.o: src\LabelDef.c
	$(CC) $(CFLAGS) src\LabelDef.c -o obj\LabelDef.o

obj\List.o: src\List.c
	$(CC) $(CFLAGS) src\List.c -o obj\List.o

obj\MemoryBlock.o: src\MemoryBlock.c
	$(CC) $(CFLAGS) src\MemoryBlock.c -o obj\MemoryBlock.o

obj\MemoryBlockHeader.o: src\MemoryBlockHeader.c
	$(CC) $(CFLAGS) src\MemoryBlockHeader.c -o obj\MemoryBlockHeader.o

obj\MemoryBlockSetHeader.o: src\MemoryBlockSetHeader.c
	$(CC) $(CFLAGS) src\MemoryBlockSetHeader.c -o obj\MemoryBlockSetHeader.o

obj\Parser.o: src\Parser.c
	$(CC) $(CFLAGS) src\Parser.c -o obj\Parser.o

obj\Stack.o: src\Stack.c
	$(CC) $(CFLAGS) src\Stack.c -o obj\Stack.o

obj\State.o: src\State.c
	$(CC) $(CFLAGS) src\State.c -o obj\State.o

obj\test.o: src\test.c
	$(CC) $(CFLAGS) src\test.c -o obj\test.o





